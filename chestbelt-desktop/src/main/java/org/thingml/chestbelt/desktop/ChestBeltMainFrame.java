/**
 * Copyright (C) 2012 SINTEF <franck.fleurey@sintef.no>
 *
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.thingml.chestbelt.desktop;

import org.thingml.chestbelt.driver.ChestBelt;
import org.thingml.chestbelt.driver.ChestBeltMode;
import org.thingml.chestbelt.driver.ChestBeltListener;
import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import gnu.io.CommPort;
import java.awt.Dialog;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Field;
import java.text.DecimalFormat;
import java.util.concurrent.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import org.thingml.rtcharts.swing.*;
import org.thingml.rtsync.ui.TimeSyncDelayErrorFrame;
import org.thingml.rtsync.ui.TimeSyncFrame;
import org.thingml.rtsync.core.TimeSynchronizable;
import org.thingml.rtsync.core.TimeSynchronizer;
import org.thingml.rtsync.ui.TimeSyncPingFrame;
import org.thingml.rtsync.core.TimeSynchronizerPrintLogger;

/**
 *
 * @author ffl
 */
public class ChestBeltMainFrame extends javax.swing.JFrame implements ChestBeltListener, BitRateListemer {

    ChestBelt belt = null;
    protected GraphBuffer becg = new GraphBuffer(1000);
    BitRateCounter counter = null;
    OrientationCalculator orientationCalculator = null;
    
  
    /** Creates new form MainFrame */
    public ChestBeltMainFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public void disableConnection() {
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jButton1.setEnabled(false);
    }
    
    private SerialPort serialPort = null;
    
    public ChestBelt connectChestBelt() {
    	
        ConnectDialog d = new ConnectDialog(this, true);
        d.setVisible(true);
        
        if (d.getSerialPort() != null) {
            try {
                serialPort = d.getSerialPort();
                return new ChestBelt(serialPort.getInputStream(), serialPort.getOutputStream());
            } catch (IOException ex) {
                Logger.getLogger(ChestBeltMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return null;    
    }
    
    public void tryToCloseSerialPort() {
        ExecutorService executor = Executors.newCachedThreadPool();
        Callable<Object> task = new Callable<Object>() {
           @Override
           public Object call() {
              serialPort.close();
              System.out.println("Serial port closed.");
              return null;
           }};
        Future<Object> future = executor.submit(task);
        try {
           Object result = future.get(5, TimeUnit.SECONDS); 
        } catch (TimeoutException ex) {
           System.out.println("Timeout closing serial port.");
        } catch (InterruptedException e) {
           e.printStackTrace();
        } catch (ExecutionException e) {
           e.printStackTrace();
        } finally {
           future.cancel(true);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupStatus = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jProgressBarAx = new javax.swing.JProgressBar();
        jProgressBarAy = new javax.swing.JProgressBar();
        jProgressBarAz = new javax.swing.JProgressBar();
        jProgressBarGx = new javax.swing.JProgressBar();
        jProgressBarGy = new javax.swing.JProgressBar();
        jProgressBarGz = new javax.swing.JProgressBar();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldIMUTime = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jProgressBarT = new javax.swing.JProgressBar();
        jTextFieldTTime = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jProgressBarHR = new javax.swing.JProgressBar();
        jTextFieldHRTime = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTextFieldPostTime = new javax.swing.JTextField();
        jLabelPosture = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jTextFieldActTime = new javax.swing.JTextField();
        jLabelActivity = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldBitRate = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldSID = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldSFW = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldOver = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxMode = new javax.swing.JComboBox(org.thingml.chestbelt.driver.ChestBeltMode.values());
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxBTInt = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jProgressBarBatt = new javax.swing.JProgressBar();
        jRadioButtonOn = new javax.swing.JRadioButton();
        jRadioButtonOff = new javax.swing.JRadioButton();
        jRadioButtonSBy = new javax.swing.JRadioButton();
        jRadioButtonCh = new javax.swing.JRadioButton();
        jRadioButtonSW = new javax.swing.JRadioButton();
        jPanelECG = new LineGraphPanel(becg, "ECG (Raw ADC value)", 0, 4096, 1024, new java.awt.Color(255, 104, 104));
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldRefTime = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jComboBoxAlertLevel = new javax.swing.JComboBox();
        jButtonAlert = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemUDPConnect = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ChestBelt Test Application");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("IMU"));

        jProgressBarAx.setForeground(new java.awt.Color(255, 204, 0));
        jProgressBarAx.setMaximum(500);
        jProgressBarAx.setMinimum(-500);

        jProgressBarAy.setForeground(new java.awt.Color(255, 204, 0));
        jProgressBarAy.setMaximum(500);
        jProgressBarAy.setMinimum(-500);

        jProgressBarAz.setForeground(new java.awt.Color(255, 204, 0));
        jProgressBarAz.setMaximum(500);
        jProgressBarAz.setMinimum(-500);

        jProgressBarGx.setForeground(new java.awt.Color(255, 153, 0));
        jProgressBarGx.setMaximum(2500);
        jProgressBarGx.setMinimum(-2500);

        jProgressBarGy.setForeground(new java.awt.Color(255, 153, 0));
        jProgressBarGy.setMaximum(2500);
        jProgressBarGy.setMinimum(-2500);

        jProgressBarGz.setForeground(new java.awt.Color(255, 153, 0));
        jProgressBarGz.setMaximum(2500);
        jProgressBarGz.setMinimum(-2500);

        jLabel7.setText("Timestamp :");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chart-1.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Accel");

        jLabel2.setText("Gyro");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIMUTime, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBarAx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(jProgressBarAy, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(jProgressBarAz, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBarGz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                            .addComponent(jProgressBarGy, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                            .addComponent(jProgressBarGx, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jProgressBarAx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jProgressBarAy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBarAz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addComponent(jProgressBarGx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jProgressBarGy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarGz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldIMUTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Temperature"));

        jProgressBarT.setForeground(new java.awt.Color(0, 153, 255));
        jProgressBarT.setMaximum(450);
        jProgressBarT.setMinimum(250);
        jProgressBarT.setValue(370);
        jProgressBarT.setString("");
        jProgressBarT.setStringPainted(true);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chart-1.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBarT, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTTime, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBarT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTTime, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Heart Rate"));

        jProgressBarHR.setForeground(new java.awt.Color(255, 51, 51));
        jProgressBarHR.setMaximum(2200);
        jProgressBarHR.setValue(750);
        jProgressBarHR.setString("");
        jProgressBarHR.setStringPainted(true);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chart-1.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBarHR, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldHRTime, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jProgressBarHR, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldHRTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Posture"));

        jLabelPosture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/upright.png"))); // NOI18N

        jLabel19.setText("Timestamp :");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPostTime, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelPosture))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jLabelPosture, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextFieldPostTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Activity"));

        jLabelActivity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Activity_1.png"))); // NOI18N

        jLabel9.setText("Timestamp :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabelActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldActTime, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelActivity, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldActTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        jButton1.setText("Connect...");
        jButton1.setMaximumSize(null);
        jButton1.setMinimumSize(null);
        jButton1.setPreferredSize(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel20.setText("BW :");

        jTextFieldBitRate.setText("0");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chart-1.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel14.setText("Sensor ID :");

        jLabel15.setText("FW revision :");

        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("Overrun :");

        jButton11.setText("Time...");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSID, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSFW, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldOver, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBitRate, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBitRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel15)
                    .addComponent(jTextFieldSFW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jTextFieldOver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setText("Mode :");

        jComboBoxMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModeActionPerformed(evt);
            }
        });

        jButton4.setText("Live Data");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Conn. Restored");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Bluetooth update interval :");

        jComboBoxBTInt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "3", "5", "10", "15", "30", "60", "120" }));
        jComboBoxBTInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBTIntActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxMode, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 273, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxBTInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jComboBoxBTInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));

        jLabel12.setText("Battery :");

        jProgressBarBatt.setForeground(new java.awt.Color(102, 102, 102));
        jProgressBarBatt.setString("");
        jProgressBarBatt.setStringPainted(true);

        buttonGroupStatus.add(jRadioButtonOn);
        jRadioButtonOn.setText("On Body");
        jRadioButtonOn.setEnabled(false);

        buttonGroupStatus.add(jRadioButtonOff);
        jRadioButtonOff.setText("Off Body");
        jRadioButtonOff.setEnabled(false);

        buttonGroupStatus.add(jRadioButtonSBy);
        jRadioButtonSBy.setText("Standby");
        jRadioButtonSBy.setEnabled(false);

        buttonGroupStatus.add(jRadioButtonCh);
        jRadioButtonCh.setText("Charging");
        jRadioButtonCh.setEnabled(false);
        jRadioButtonCh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonChActionPerformed(evt);
            }
        });

        buttonGroupStatus.add(jRadioButtonSW);
        jRadioButtonSW.setText("SW Update");
        jRadioButtonSW.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarBatt, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonOn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonOff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonSBy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonCh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonSW)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(jProgressBarBatt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonOn)
                    .addComponent(jRadioButtonOff)
                    .addComponent(jRadioButtonSBy)
                    .addComponent(jRadioButtonCh)
                    .addComponent(jRadioButtonSW))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("Reference Time :");

        jTextFieldRefTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRefTimeActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("4ms resolution");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/file-3.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("EMG Raw...");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("EMG Proc...");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jComboBoxAlertLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2" }));
        jComboBoxAlertLevel.setSelectedIndex(2);
        jComboBoxAlertLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAlertLevelActionPerformed(evt);
            }
        });

        jButtonAlert.setText("Alert");
        jButtonAlert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlertActionPerformed(evt);
            }
        });

        jButton12.setText("Orientation");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRefTime, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addGap(49, 49, 49)
                .addComponent(jButtonAlert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxAlertLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAlert)
                        .addComponent(jComboBoxAlertLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox1)
                        .addComponent(jTextFieldRefTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton7)))
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItemUDPConnect.setText("UDP Connect");
        jMenuItemUDPConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUDPConnectActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemUDPConnect);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelECG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelECG, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void do_connect(ChestBelt b) {
            belt = b;
            belt.addChestBeltListener(this);
            ((GraphPanel)jPanelECG).start();
            counter = new BitRateCounter(belt);
            counter.addChestBeltListener(this);
            counter.start();
            belt.requestCUTime(1); // default to 4ms timestamps
            belt.getModelInfo();
            belt.getSerialNumber();
            belt.getCUFWRevision(0);
            belt.setBTUpdateInterval(1);
            jCheckBox1.setSelected(false);
            total_overrun = 0;
            jTextFieldOver.setText("" + total_overrun + " (0)");
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (belt == null) { // Connect
            belt = connectChestBelt();
            if (belt == null) return;
            do_connect(belt);
             // start the timesync
        }
        else { // Disconnect
             try {
                  // start the timesync
                belt.close();
                belt = null;
               if (serialPort != null) tryToCloseSerialPort();
            }
            catch(Exception e) {
                e.printStackTrace();
            }
        }
        if (belt != null) jButton1.setText("Disconnect");
        else jButton1.setText("Connect...");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (belt != null) {
            belt.setLiveDataMode();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    IMUGraphForm imuform = new IMUGraphForm(belt);
    imuform.setSize(600, 800);
    imuform.setVisible(true);
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    ECGGraphForm ecgform = new ECGGraphForm(belt);
    ecgform.setSize(600, 300);
    ecgform.setVisible(true);
}//GEN-LAST:event_jButton5ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    SkinTempGraphFrame tempform = new SkinTempGraphFrame(belt);
    tempform.setSize(600, 200);
    tempform.setVisible(true);
}//GEN-LAST:event_jButton6ActionPerformed

private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    BitRateGraphFrame tempform = new BitRateGraphFrame(counter);
    tempform.setSize(600, 200);
    tempform.setVisible(true);
}//GEN-LAST:event_jButton8ActionPerformed

private void jComboBoxModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModeActionPerformed
    if (belt != null) {
        belt.setDataMode(((ChestBeltMode)jComboBoxMode.getSelectedItem()));
    }
}//GEN-LAST:event_jComboBoxModeActionPerformed

private void jRadioButtonChActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonChActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_jRadioButtonChActionPerformed

private void jComboBoxBTIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBTIntActionPerformed
    if (belt != null) belt.setBTUpdateInterval(
        Integer.parseInt(jComboBoxBTInt.getSelectedItem().toString()));
}//GEN-LAST:event_jComboBoxBTIntActionPerformed

private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    if (belt != null) {
        FileLoggerForm form = new FileLoggerForm(belt, orientationCalculator);
        form.pack();
        form.setVisible(true);
    }
}//GEN-LAST:event_jButton7ActionPerformed

private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    if (belt != null) {
        if (jCheckBox1.isSelected()) {
            belt.requestCUTime(1);
        }
        else {
            belt.requestCUTime(0);
        }
    }
}//GEN-LAST:event_jCheckBox1ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    belt.connectionRestored();
}//GEN-LAST:event_jButton3ActionPerformed

private void jTextFieldRefTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRefTimeActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextFieldRefTimeActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItemUDPConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUDPConnectActionPerformed
        
        UDPConnectDialog d = new UDPConnectDialog(this, true);
        d.setVisible(true);
        if (d.getResult() != null) {
            belt = d.getResult();
            belt.addChestBeltListener(this);
            ((GraphPanel)jPanelECG).start();
            counter = new BitRateCounter(belt);
            counter.addChestBeltListener(this);
            counter.start();
            //belt.requestCUTime(0);
            //belt.getModelInfo();
            //belt.getSerialNumber();
            //belt.getCUFWRevision(0);
            //belt.setBTUpdateInterval(1);
            jCheckBox1.setSelected(false);
            total_overrun = 0;
            jTextFieldOver.setText("" + total_overrun + " (0)");
        }
        
    }//GEN-LAST:event_jMenuItemUDPConnectActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        EMGGraphForm emgform = new EMGGraphForm(belt);
        emgform.setSize(600, 600);
        emgform.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        EMGGraphPCForm emgform = new EMGGraphPCForm(belt);
        emgform.setSize(800, 500);
        emgform.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (belt != null) {
            TimeSyncFrame f = new TimeSyncFrame(belt.getTimeSynchronizer());
            f.pack();
            f.setVisible(true);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButtonAlertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlertActionPerformed
        int level = Integer.parseInt(jComboBoxAlertLevel.getSelectedItem().toString());
        if (belt != null) {
            belt.sendAlert(level);
        }
    }//GEN-LAST:event_jButtonAlertActionPerformed

    private void jComboBoxAlertLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAlertLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAlertLevelActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (orientationCalculator==null)  orientationCalculator = new OrientationCalculator(belt);
        OrientationGraphForm orientationgraphform = new OrientationGraphForm(belt,orientationCalculator);
        orientationgraphform.setSize(600, 600);
        orientationgraphform.setVisible(true);        
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            // This is a very dirty hack to try and set the java.library.path dynamically.
            System.setProperty("java.library.path", ".");
            Field fieldSysPath = ClassLoader.class.getDeclaredField("sys_paths");
            fieldSysPath.setAccessible(true);
            fieldSysPath.set(null, null);
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            // Set System L&F 
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
            System.out.println(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ChestBeltMainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAlert;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxAlertLevel;
    private javax.swing.JComboBox jComboBoxBTInt;
    private javax.swing.JComboBox jComboBoxMode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelActivity;
    private javax.swing.JLabel jLabelPosture;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemUDPConnect;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelECG;
    private javax.swing.JProgressBar jProgressBarAx;
    private javax.swing.JProgressBar jProgressBarAy;
    private javax.swing.JProgressBar jProgressBarAz;
    private javax.swing.JProgressBar jProgressBarBatt;
    private javax.swing.JProgressBar jProgressBarGx;
    private javax.swing.JProgressBar jProgressBarGy;
    private javax.swing.JProgressBar jProgressBarGz;
    private javax.swing.JProgressBar jProgressBarHR;
    private javax.swing.JProgressBar jProgressBarT;
    private javax.swing.JRadioButton jRadioButtonCh;
    private javax.swing.JRadioButton jRadioButtonOff;
    private javax.swing.JRadioButton jRadioButtonOn;
    private javax.swing.JRadioButton jRadioButtonSBy;
    private javax.swing.JRadioButton jRadioButtonSW;
    private javax.swing.JTextField jTextFieldActTime;
    private javax.swing.JTextField jTextFieldBitRate;
    private javax.swing.JTextField jTextFieldHRTime;
    private javax.swing.JTextField jTextFieldIMUTime;
    private javax.swing.JTextField jTextFieldOver;
    private javax.swing.JTextField jTextFieldPostTime;
    private javax.swing.JTextField jTextFieldRefTime;
    private javax.swing.JTextField jTextFieldSFW;
    private javax.swing.JTextField jTextFieldSID;
    private javax.swing.JTextField jTextFieldTTime;
    // End of variables declaration//GEN-END:variables

        @Override
	public void cUSerialNumber(long value, int timestamp) {
            jTextFieldSID.setText(""+value);
             setTitle("ChestUnit [" + value + "]");
	}

	@Override
	public void cUFWRevision(String value, int timestamp) {
	   jTextFieldSFW.setText(""+value);
	}

	@Override
	public void batteryStatus(int value, int timestamp) {
           jProgressBarBatt.setString(""+value + " %");
           jProgressBarBatt.setValue(value);

	}
        
        javax.swing.ImageIcon UPRIGHT = new javax.swing.ImageIcon(getClass().getResource("/upright.png"));
        javax.swing.ImageIcon PRONE = new javax.swing.ImageIcon(getClass().getResource("/prone.png"));
        javax.swing.ImageIcon SUPINE = new javax.swing.ImageIcon(getClass().getResource("/supine.png"));
        javax.swing.ImageIcon SIDE = new javax.swing.ImageIcon(getClass().getResource("/side.png"));
        javax.swing.ImageIcon INVERTED = new javax.swing.ImageIcon(getClass().getResource("/inverted.png"));
        
        javax.swing.ImageIcon[] ACTIVITY = {new javax.swing.ImageIcon(getClass().getResource("/Activity_0.png")),
                new javax.swing.ImageIcon(getClass().getResource("/Activity_1.png")),
                new javax.swing.ImageIcon(getClass().getResource("/Activity_2.png")),
                new javax.swing.ImageIcon(getClass().getResource("/Activity_3.png"))};

	@Override
	public void indication(int value, int timestamp) {
            
            if (value >= 1 && value <= 6) { // This is orientation
                switch (value) {
                    case 1 : jLabelPosture.setIcon(UPRIGHT);break;
                    case 2 : jLabelPosture.setIcon(PRONE);break;
                    case 3 : jLabelPosture.setIcon(SUPINE);break;
                    case 4 : jLabelPosture.setIcon(SIDE);break;
                    case 5 : jLabelPosture.setIcon(INVERTED);break;
                    case 6 : jLabelPosture.setIcon(null);break;
                    default:break;     
                }
                jTextFieldPostTime.setText("" + timestamp);     
            }
            else if (value >=20 && value <=24) { // This is activity
                switch (value) {
                    case 20 : jRadioButtonOn.setSelected(true);break;
                    case 21 : jRadioButtonOff.setSelected(true);break;
                    case 22 : jRadioButtonSBy.setSelected(true);break;
                    case 23 : jRadioButtonCh.setSelected(true);break;
                    case 24 : jRadioButtonSW.setSelected(true);break;
                    default:break;     
                }
            }
            else if (value >=10 && value <=13) { // This is activity
                jLabelActivity.setIcon(ACTIVITY[value-10]);
                jTextFieldActTime.setText("" + timestamp);  
            }
            else if (value >=28 && value <=34) {
                //jComboBoxMode.setSelectedItem(ChestBeltMode.fromCode(value));
                System.out.println("Indication : " + value);
            }
	}

	@Override
	public void status(int value, int timestamp) {
		// TODO Auto-generated method stub

	}

        int total_overrun = 0;
	@Override
	public void messageOverrun(int value, int timestamp) {
            total_overrun += value;
            jTextFieldOver.setText("" + total_overrun + " (" + value + ")");
	}

	@Override
	public void referenceClockTime(long value, boolean seconds) {
		jTextFieldRefTime.setText("" + value);
                jCheckBox1.setSelected(!seconds);
		System.out.println("[ReferenceClockTimeSync] " + value + " (" + seconds + ")");

	}

	@Override
	public void fullClockTimeSync(long value, boolean seconds) {
		System.out.println("[FullClockTimeSync] " + value + " (" + seconds + ")");

	}

	@Override
	public void heartRate(int value, int timestamp) {
		//System.out.println("Heart Rate = " + (value/10) + " (t=" + timestamp + ")" );
                jProgressBarHR.setString(""+new DecimalFormat("##.0").format((double)value/10.0) + " BPM");
                jProgressBarHR.setValue(value);
                jTextFieldHRTime.setText("" + timestamp);
                
	}

	@Override
	public void heartRateConfidence(int value, int timestamp) {

	}

	@Override
	public void eCGData(int value) {
		//System.out.println("ECG Data = " + value );
            becg.insertData(value);

	}

	@Override
	public void eCGSignalQuality(int value, int timestamp) {
		//jTextFieldECGQ.setText(""+value +" %");
                //jProgressBarECGQ.setValue(value);

	}

	@Override
	public void eCGRaw(int value, int timestamp) {
		//System.out.println("ECG Raw = " + value + " (t=" + timestamp + ")" );

	}

	@Override
	public void gyroPitch(int value, int timestamp) {
            //jTextFieldGy.setText(""+value);
            jProgressBarGy.setValue(value);
	}

	@Override
	public void gyroRoll(int value, int timestamp) {
           //jTextFieldGx.setText(""+value);
            jProgressBarGx.setValue(value);
	}

	@Override
	public void gyroYaw(int value, int timestamp) {
            //jTextFieldGz.setText(""+value);
            jProgressBarGz.setValue(value);

	}

	@Override
	public void accLateral(int value, int timestamp) {
           // jTextFieldAy.setText(""+value);
            jProgressBarAy.setValue(value);
	}

	@Override
	public void accLongitudinal(int value, int timestamp) {
            //jTextFieldAz.setText(""+value);
            jProgressBarAz.setValue(value);

	}

	@Override
	public void accVertical(int value, int timestamp) {
            //jTextFieldAx.setText(""+value);
            jProgressBarAx.setValue(value);

	}

	@Override
	public void rawActivityLevel(int value, int timestamp) {
            if (value >=10 && value <=13) { // This is activity
                //jLabelActivity.setIcon(ACTIVITY[value-10]);
                //jTextFieldActTime.setText("R" + timestamp);  
            }
	}

	@Override
	public void combinedIMU(int ax, int ay, int az, int gx, int gy, int gz, int timestamp) {
		//System.out.println("IMU: " + ax + "\t" + ay + "\t" + az + "\t" + gx + "\t" + gy + "\t" + gz + "\t" + "(" + timestamp + ")");
                //jTextFieldAx.setText(""+ax);
                jProgressBarAx.setValue(ax);
                
                //jTextFieldAy.setText(""+ay);
                jProgressBarAy.setValue(ay);
                
                //jTextFieldAz.setText(""+az);
                jProgressBarAz.setValue(az);
                
                //jTextFieldGx.setText(""+gx);
                jProgressBarGx.setValue(gx);
                
                //jTextFieldGy.setText(""+gy);
                jProgressBarGy.setValue(gy);
                
                //jTextFieldGz.setText(""+gz);
                jProgressBarGz.setValue(gz);
                
                jTextFieldIMUTime.setText(""+timestamp);
	}

	@Override
	public void skinTemperature(int value, int timestamp) {
		//System.out.println("Skin Temp = " + (value/10) + " (t=" + timestamp + ")" );
                
                jProgressBarT.setString(""+new DecimalFormat("##.0").format((double)value/10.0) + " °C");
                jProgressBarT.setValue(value);
                jTextFieldTTime.setText("" + timestamp);

	}

    @Override
    public void bitRate(int value) {
        jTextFieldBitRate.setText("" + value);
    }


static {
        
        try {
            String osName = System.getProperty("os.name");
            String osProc = System.getProperty("os.arch");

		//System.out.println(System.properties['java.library.path']);

		System.out.println("Load RxTx for os.name=" + osName  + " os.arch=" + osProc + " sun.arch.data.model=" + System.getProperty("sun.arch.data.model"));
                System.out.println("Current path = " + new File(".").getAbsolutePath());

            if (osName.equals("Mac OS X")) {
                System.out.println("Copiying " + "nativelib/Mac_OS_X/librxtxSerial.jnilib");
                NativeLibUtil.copyFile(NativeLibUtil.class.getClassLoader().getResourceAsStream("nativelib/Mac_OS_X/librxtxSerial.jnilib"), "librxtxSerial.jnilib");
            }
            if (osName.contains("Win") && System.getProperty("sun.arch.data.model").contains("32")) {
                System.out.println("Copiying " + "nativelib/Windows/win32/rxtxSerial.dll");
                NativeLibUtil.copyFile(NativeLibUtil.class.getClassLoader().getResourceAsStream("nativelib/Windows/win32/rxtxSerial.dll"), "rxtxSerial.dll");
            }
            if (osName.contains("Win") && System.getProperty("sun.arch.data.model").contains("64")) {
                System.out.println("Copiying " + "nativelib/Windows/win64/rxtxSerial.dll");
                NativeLibUtil.copyFile(NativeLibUtil.class.getClassLoader().getResourceAsStream("nativelib/Windows/win64/rxtxSerial.dll"), "rxtxSerial.dll");
            }
            if (osName.equals("Linux") && osProc.equals("ia64")) {
                System.out.println("Copiying " + "nativelib/Linux/ia64-unknown-linux-gnu/librxtxSerial.so");
                NativeLibUtil.copyFile(NativeLibUtil.class.getClassLoader().getResourceAsStream("nativelib/Linux/ia64-unknown-linux-gnu/librxtxSerial.so"), "librxtxSerial.so");
            }
            else if (osName.equals("Linux") && System.getProperty("sun.arch.data.model").contains("64")) {
                System.out.println("Copiying " + "nativelib/Linux/x86_64-unknown-linux-gnu/librxtxSerial.so");
                NativeLibUtil.copyFile(NativeLibUtil.class.getClassLoader().getResourceAsStream("nativelib/Linux/x86_64-unknown-linux-gnu/librxtxSerial.so"), "librxtxSerial.so");
            }
            if (osName.equals("Linux") && System.getProperty("sun.arch.data.model").contains("32")) {
                System.out.println("Copiying " + "nativelib/Linux/i686-unknown-linux-gnu/librxtxSerial.so");
                NativeLibUtil.copyFile(NativeLibUtil.class.getClassLoader().getResourceAsStream("nativelib/Linux/i686-unknown-linux-gnu/librxtxParallel.so"), "librxtxParallel.so");
                NativeLibUtil.copyFile(NativeLibUtil.class.getClassLoader().getResourceAsStream("nativelib/Linux/i686-unknown-linux-gnu/librxtxSerial.so"), "librxtxSerial.so");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void connectionLost() {
        
    }

    @Override
    public void eMGData(int value) {
       
    }

    @Override
    public void eMGSignalQuality(int value, int timestamp) {
        
    }

    @Override
    public void eMGRaw(int value, int timestamp) {
        
    }

    @Override
    public void eMGRMS(int channelA, int channelB, int timestamp) {
        
    }
    
    @Override
    public void referenceClockTimeSync(int timeSyncSeqNum, long value) {
        
    }

}
